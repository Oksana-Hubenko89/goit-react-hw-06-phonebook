{"version":3,"sources":["components/redux/todos/todos-actions.js","components/Container/Container.js","components/Container/Container.module.css","components/App/App.js","components/redux/todos/todos-reducer.js","components/redux/store.js","index.js"],"names":["addTodo","createAction","name","number","payload","id","uuidv4","deleteTodo","changeFilter","Container","children","className","styles","container","module","exports","HomePage","lazy","NotFoundView","App","fallback","path","component","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","todosReducer","devTools","process","persistor","persistStore","render","StrictMode","loading","document","getElementById"],"mappings":"+IAAA,mBAGMA,EAAUC,YAAc,aAAa,SAACC,EAAMC,GAAP,MAAmB,CACtDC,QAAS,CACTC,GAAIC,cACJJ,OACAC,cAKFI,EAAWN,YAAa,gBACxBO,EAAaP,YAAa,sBAEhB,KAAED,UAASO,aAAYC,iB,8FCbxB,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,M,mBCF5CI,EAAOC,QAAU,CAAC,UAAY,+B,qJCUxBC,EAAWC,gBAAK,kBACpB,sDAEIC,EAAeD,gBAAK,kBACxB,gCAmBaE,EAhBH,kBACV,8BACE,cAACV,EAAA,EAAD,UACK,cAAC,WAAD,CAAUW,SAAU,sIAApB,SACL,eAAC,IAAD,WACM,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWN,IAC3B,cAAC,IAAD,UACE,cAACE,EAAD,gB,8CCpBNK,EAAOC,YAAc,IAAD,mBACrBC,IAAQzB,SAAS,SAAC0B,EAAD,OAAQtB,EAAR,EAAQA,QAAR,4BAAuBsB,GAAvB,CAA6BtB,OADzB,cAErBqB,IAAQlB,YAAY,SAACmB,EAAD,OAAQtB,EAAR,EAAQA,QAAR,OACrBsB,EAAMC,QAAO,qBAAEtB,KAAaD,QAHN,IAMpBuB,EAAOH,YAAc,GAAD,eACrBC,IAAQjB,cACT,SAACoB,EAAD,YAAIxB,YAGOyB,cAAiB,CAC5BN,QACAI,W,0CCJEG,EAAU,sBACTC,YAAqB,CACxBC,kBAAkB,CAClBC,eAAe,CACXC,IACAC,IACAC,IACAC,IACAC,IACAC,SATQ,CAYZC,MAGEC,EAAsB,CACxBC,IAAI,WACJC,YACAC,UAAU,CAAC,WAGTC,EAAQC,YAAe,CACzBC,QAAQ,CACJC,SAAUC,YAAeR,EAAsBS,IAEnDpB,aACAqB,UAAUC,IAMC,GAACP,QAAOQ,UAHLC,YAAaT,I,gBClC/BU,iBACE,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUX,MAAOA,EAAMA,MAAvB,SACA,cAAC,IAAD,CAAaY,QAAQ,yDAAYJ,UAAWR,EAAMQ,UAAlD,SACC,cAAC,IAAD,UACE,cAAC,EAAD,YAMJK,SAASC,eAAe,W","file":"static/js/main.f3619717.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addTodo = createAction ('todos/add', (name, number) => ({\n        payload: {\n        id: uuidv4(),\n        name,\n        number,\n}\n})\n    );\n\nconst deleteTodo=createAction('todos/delete');\nconst changeFilter=createAction('todos/changeFilter');\n\nexport default  { addTodo, deleteTodo, changeFilter};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// import { Component } from 'react';\nimport { lazy, Suspense } from 'react';\nimport './App.css';\nimport React from 'react';\nimport { Switch, Route} from 'react-router-dom';\n// import { ToastContainer } from 'react-toastify';\nimport Container from '../Container';\n//import { ToastContainer } from 'react-toastify';\n//import 'react-toastify/dist/ReactToastify.css';\n\n\nconst HomePage = lazy(() =>\n  import('../../views/HomePage' /* webpackChunkName: \"home-view\" */),\n);\nconst NotFoundView = lazy(() =>\n  import('../../views/NotFoundView'));\n\n\nconst App = () => (\n  <div>\n    <Container>\n         <Suspense fallback={<h1>ЗАГРУЖАЕМ МАРШРУТ...</h1>}>\n    <Switch>\n          <Route path=\"/\" component={HomePage}></Route>\n          <Route>\n            <NotFoundView />\n          </Route>\n          {/* <ToastContainer autoClose={3000} />  */}\n      </Switch>\n      </Suspense>\n      </Container>\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport {createReducer} from '@reduxjs/toolkit';\nimport actions from './todos-actions';\n\n\nconst items =createReducer([],{\n    [actions.addTodo]:(state,{payload})=>[...state,payload],\n    [actions.deleteTodo]:(state,{payload})=>\n    state.filter(({id})=>id !== payload),\n    });\n  \nconst filter=createReducer('', {\n    [actions.changeFilter]:\n    (_,{payload})=>payload,\n});\n \nexport default combineReducers ({\n    items,\n    filter,\n});\n\n//import { createStore } from \"react-redux\";\n\n// const initialState = {\n//     contacts: {\n//         item: [],\n//         filter:''\n//    }\n// }\n// const reducer = { state=initialState, action }=>\n\n\n\n// const items = (state = [], { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];\n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== payload)\n//        default:\n//             return state;\n//     }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//     switch (type) {\n//         case 'todos/changeFilter':\n//             return payload;\n    \n//         default:\n//             return state;\n    \n//     }\n// }","import todosReducer from './todos/todos-reducer';\nimport { configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {persistStore, persistReducer,\nFLUSH,\nREHYDRATE,\nPAUSE,\nPERSIST,\nPURGE,\nREGISTER, \n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n    serializableCheck:{\n    ignoredActions:[\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER, \n        ],\n    }\n}), logger,\n];\n\nconst contactsPersistConfig={\n    key:'contacts',\n    storage,\n    blacklist:['filter'],\n}\n\nconst store = configureStore({\n    reducer:{\n        contacts: persistReducer(contactsPersistConfig,todosReducer),\n        },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// const store = createStore(rootReducer, composeWithDevTools());\n\nexport default {store, persistor};","import React from 'react';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './components/redux/store';\nimport { render } from 'react-dom';\nimport { PersistGate} from 'redux-persist/integration/react';\n\nrender(\n  <React.StrictMode>\n   <Provider store={store.store}>\n   <PersistGate loading=\"Загружаем\" persistor={store.persistor}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n    </React.StrictMode>\n ,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}